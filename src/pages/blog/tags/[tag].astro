---
import { getCollection } from "astro:content";
import {
	getAllTags,
	tagDefinitions,
	tagsArray,
} from "../../../content/blog/_tags";
import type { TagEnum } from "../../../content/blog/_tags";
import Layout from "../../../layouts/Layout.astro";
import PostLink from "../../../components/astro/PostLink.astro";
import { getAllBlogPosts } from "../../../content/blog/_collection";

export function getStaticPaths() {
	return tagsArray.map((tag) => ({
		params: { tag: tag.toLowerCase() },
		props: { tag: tag as TagEnum },
	}));
}

const tag = Astro.props.tag;

let posts = await getAllBlogPosts();
posts = posts.filter((post) => getAllTags(post.data).includes(tag));

const tagDefinition = tagDefinitions[tag];
if (tagDefinition === undefined)
	throw new Error(`Provided unknown tag: '${tag}', this should not happen`);
---

<Layout title={tag}>
	<h1>{tag}</h1>
	<p>{tagDefinition.description}</p>
	<ul>
		{
			posts.map((post) => (
				<li>
					<PostLink post={post.data} slug={post.slug} />
				</li>
			))
		}
	</ul>
</Layout>
